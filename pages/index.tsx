import { NextPage } from "next";
import Stripe from "stripe"
import Head from 'next/head'
import { Container, Row , Col, Image, Stack, Button } from "react-bootstrap"


type Props = {
    products: {
        id: string;
        description: string | null;
        name: string;
        images: string[];
        unit_label: string | null | undefined;
        prices: {
            id: string;
            currency: string;
            transform_quantity: Stripe.Price.TransformQuantity | null;
            unit_amount: number | null;
        }[];
    }[]
}

export const getStaticProps = async () => {
    const stripe = new Stripe(process.env.STRIPE_SECRET_KEY ?? "", {
        apiVersion: "2022-11-15"
    })
    const products = await stripe.products.list()
    if(!products || products.data.length < 1){
        return []
    }

    const response = await Promise.all(products.data.map(async (resProduct: Stripe.Product) => {
        const prices = await stripe.prices.list({
            product: resProduct.id
        })
        return {
            id: resProduct.id,
            description: resProduct.description,
            name: resProduct.name,
            images: resProduct.images,
            unit_label: resProduct.unit_label,
            prices: prices.data.map(price => {
                return {
                    id: price.id,
                    currency: price.currency,
                    transform_quantity: price.transform_quantity,
                    unit_amount: price.unit_amount,
                }
            })
        }
    }))

    return{
        props:{
            products: response
        }
    }
}

const Home: NextPage<Props> = ({products}) => {
    return(
        <main>
        <Head>
          <title>EC-Site-Sample</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
         <Container className="mb-3">
           <Stack gap={3}>
             {products.map(product => {
               return (
                 <Row key={product.id}>
                   <Col xs={4}>
                     <Image
                       src={product.images[0]}
                       alt={product.name}
                       style={{maxWidth: '100%'}}
                     />
                   </Col>
                   <Col>
                     <Stack gap={3}>
                       <h2>{product.name}</h2>
                       <p>{product.description}</p>
                     </Stack>
                     <Stack direction="horizontal">
                       {product.prices.map(price => {
                         return (
                           <dl key={price.id}>
                             <dt>価格</dt>
                             <dd>
                               <span>{price.unit_amount ? (`${price.unit_amount.toLocaleString()}${price.currency.toLocaleUpperCase()}`) : null}</span>
                               {price.transform_quantity ? <small>({price.transform_quantity.divide_by}アイテム毎)</small> : null}
                             </dd>
                             <dd>
                                <form action="/api/session" method="POST">
                                    <input type='hidden' name='price' value={price.id}/>
                                    <input type='hidden' name='quantity' value={1}/> 
                                    <Button type='submit'>いますぐ注文する</Button>
                                </form>
                             </dd>
                           </dl>
                         )
                       })}
                     </Stack>
                   </Col>
                 </Row>
               )
             })}
           </Stack>
         </Container>
      </main>
    )
}

export default Home